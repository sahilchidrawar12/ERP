:css
  #items_table .input{
    margin: 2px 0px;
  }
  input.hide{ display: none; }
  #items_table input.item_id{ display: none; }

- present transaction, TransactionPresenter do |presenter|
  = simple_form_for(transaction, :html => {:id => 'transaction_form', :class => 'enter'}) do |f|
    = bonsai_form_error(f)

    .row
      .span3
        = f.input :date, :label => "Fecha"
      .span4
        = f.association :project,  :label => 'Proyecto',
          :input_html => {'data-new_url' => new_project_path, 'data-title' => "Nuevo proyecto", 'data-trigger' => 'new_project' }

      .span4
        - unless transaction.currency_id == currency_id
          %label Tipo de cambio
          %strong
            1
            = transaction.currency_symbol
            \=
            = currency_symbol
            = transaction.exchange_rate
    .row
      .span3
        %label.radio.inline
          = f.radio_button :fact, true, :class => 'fact'
          Factura
        %label.radio.inline
          = f.radio_button :fact, false, :class => 'fact'
          Recibo
      .span3
        = f.input :bill_number, :label => 'Nº de <span id="fact_label"></span>'.html_safe, :input_html => {:size => 20}

    %hr.light
    .row

      .span6
        = f.input :description, :label => 'Descripción', :as => :text, :input_html => {:rows => 3, :cols => 40}

      -#=f.association :taxes, :as => :check_boxes, :label => 'Impuestos', :wrapper_html => {:id => 'taxes'},
        :label_method => lambda{|tax| "<span id='span#{tax.id}' class='tax' data-rate='#{tax.rate}' title ='#{tax.name}'>#{tax.abbreviation} (#{ntc tax.rate}%)</span>".html_safe }

    -# Render items
    =render "transactions/form_items", :f => f, :transaction => transaction


  #currency_form.ajax-modal{ :style => 'display:none;'}
    %h4.red Advertencia! Verifique los precios de los items, serán modificados
    
    %label Tipo de cambio
    %span.currency_symbol.b
    1
    \= 
    %span.default_symbol.b
    %input{:type => 'text', :size => 8, :class => 'r', :id => 'exchange_rate', :value => transaction.exchange_rate}
    %button#exchange_rate_button.button Cambiar

  :javascript
    $( function() {
      // Autocomplete
      $('#transaction_contact_id').contactAutocomplete(#{get_contact_list.to_json}, {'id': 'contact_autocomplete'});
    
      // Detect what is selected
      function checkFact() {
        var val = "", sel = $('input.fact:checked');
        if(sel.length == 0) {
          $('input.fact:first').attr("checked", true);
          val = "Factura";
        }else if(sel.length > 0) {
          val = sel.val() == "true" ? "Factura" : "Recibo"
        }

        $('#fact_label').html(val);
      }

      // Check if factura or recibo
      checkFact();

      $('input.fact').click(function() { checkFact() });
      
      var type = "#{transaction.type.downcase}";
      // Creation of all Backbone

      var currencies = #{ Currency.to_hash.to_json };
      var fake_accounts = #{presenter.fake_accounts.to_json};

      window.transaction = new TransactionGlobal(currencies, #{currency_id}, #{transaction.currency_id}, #{transaction.exchange_rate}, type);

      // Functions for the select boxes
      $('body').live('new_project', function(e, resp) {
        $('#' + type + '_project_id').createSelectOption(resp.id, resp.name);
      });

      $('#transaction_discount').after("<span class='b'>%</span>")

      // New item triger
      $('#items_table a.add').live('click', function() {
        $('#items_table').data('row', $(this).parents('tr:first').get(0).rowIndex );
      });

    });
